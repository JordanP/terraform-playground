{
  "groups": [
    {
      "name": "kube-prometheus-node-recording.rules",
      "rules": [
        {
          "expr": "sum(rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\"}[3m])) BY (instance)",
          "record": "instance:node_cpu:rate:sum"
        },
        {
          "expr": "sum((node_filesystem_size_bytes{mountpoint=\"/\"} - node_filesystem_free_bytes{mountpoint=\"/\"})) BY (instance)",
          "record": "instance:node_filesystem_usage:sum"
        },
        {
          "expr": "sum(rate(node_network_receive_bytes_total[3m])) BY (instance)",
          "record": "instance:node_network_receive_bytes:rate:sum"
        },
        {
          "expr": "sum(rate(node_network_transmit_bytes_total[3m])) BY (instance)",
          "record": "instance:node_network_transmit_bytes:rate:sum"
        },
        {
          "expr": "sum(rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\"}[5m])) WITHOUT (cpu, mode) / ON(instance) GROUP_LEFT() count(sum(node_cpu_seconds_total) BY (instance, cpu)) BY (instance)",
          "record": "instance:node_cpu:ratio"
        },
        {
          "expr": "sum(rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\"}[5m]))",
          "record": "cluster:node_cpu:sum_rate5m"
        },
        {
          "expr": "cluster:node_cpu_seconds_total:rate5m / count(sum(node_cpu_seconds_total) BY (instance, cpu))",
          "record": "cluster:node_cpu:ratio"
        }
      ]
    },
    {
      "name": "kube-prometheus-node-alerting.rules",
      "rules": [
        {
          "alert": "NodeDiskRunningFull",
          "annotations": {
            "message": "Device {{ $labels.device }} of node-exporter {{ $labels.namespace }}/{{ $labels.pod }} will be full within the next 24 hours."
          },
          "expr": "(node:node_filesystem_usage: > 0.85) and (predict_linear(node:node_filesystem_avail:[6h], 3600 * 24) < 0)\n",
          "for": "30m",
          "labels": {
            "severity": "warning"
          }
        },
        {
          "alert": "NodeDiskRunningFull",
          "annotations": {
            "message": "Device {{ $labels.device }} of node-exporter {{ $labels.namespace }}/{{ $labels.pod }} will be full within the next 2 hours."
          },
          "expr": "(node:node_filesystem_usage: > 0.85) and (predict_linear(node:node_filesystem_avail:[30m], 3600 * 2) < 0)\n",
          "for": "10m",
          "labels": {
            "severity": "critical"
          }
        }
      ]
    },
    {
      "name": "node-time",
      "rules": [
        {
          "alert": "ClockSkewDetected",
          "annotations": {
            "message": "Clock skew detected on node-exporter {{ $labels.namespace }}/{{ $labels.pod }}. Ensure NTP is configured correctly on this host."
          },
          "expr": "abs(node_timex_offset_seconds{job=\"node-exporter\"}) > 0.03\n",
          "for": "2m",
          "labels": {
            "severity": "warning"
          }
        }
      ]
    },
    {
      "name": "node-network",
      "rules": [
        {
          "alert": "NetworkReceiveErrors",
          "annotations": {
            "message": "Network interface \"{{ $labels.device }}\" showing receive errors on node-exporter {{ $labels.namespace }}/{{ $labels.pod }}\""
          },
          "expr": "rate(node_network_receive_errs_total{job=\"node-exporter\",device!~\"veth.+|tunl.+\"}[2m]) > 0\n",
          "for": "2m",
          "labels": {
            "severity": "warning"
          }
        },
        {
          "alert": "NetworkTransmitErrors",
          "annotations": {
            "message": "Network interface \"{{ $labels.device }}\" showing transmit errors on node-exporter {{ $labels.namespace }}/{{ $labels.pod }}\""
          },
          "expr": "rate(node_network_transmit_errs_total{job=\"node-exporter\",device!~\"veth.+|tunl.+\"}[2m]) > 0\n",
          "for": "2m",
          "labels": {
            "severity": "warning"
          }
        },
        {
          "alert": "NodeNetworkInterfaceFlapping",
          "annotations": {
            "message": "Network interface \"{{ $labels.device }}\" changing it's up status often on node-exporter {{ $labels.namespace }}/{{ $labels.pod }}\""
          },
          "expr": "changes(node_network_up{job=\"node-exporter\",device!~\"veth.+|tunl.+\"}[2m]) > 2\n",
          "for": "2m",
          "labels": {
            "severity": "warning"
          }
        }
      ]
    },
    {
      "name": "general.rules",
      "rules": [
        {
          "alert": "TargetDown",
          "annotations": {
            "message": "{{ $value }}% of the {{ $labels.job }} targets are down."
          },
          "expr": "100 * (count(up == 0) BY (job) / count(up) BY (job)) > 10",
          "for": "10m",
          "labels": {
            "severity": "warning"
          }
        }
      ]
    }
  ]
}
